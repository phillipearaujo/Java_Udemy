package infra;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;

import modelo.basico.Usuario;

public class DAO<E> {

	private static EntityManagerFactory emf;
	private  EntityManager em;
	private Class<E> classe;
	
	static {
		try {
			emf = Persistence.createEntityManagerFactory("exercicios-jpa");
		} catch (Exception e) {
			//logar log4j
		}
	}
	
	public DAO() {
		this(null);
	}
	
	public DAO(Class<E> classe) {
		this.classe = classe;
		em = emf.createEntityManager();
	}
	
	public DAO<E> openTransaction() {
		em.getTransaction().begin();
		return this;
	}

	public DAO<E> closeTransaction() {
		em.getTransaction().commit();
		return this;
	}
	
	public DAO<E> include(E entidade) {
		em.persist(entidade);
		return this;
	}
	
	public DAO<E> includeAtomic(E entidade) {
		return this.openTransaction().include(entidade).closeTransaction();
	}
	
	public List<E> getAll() {
		return this.getAll(10, 0);
	}
	
	public List<E> getAll(int amount, int range) {
		if(classe == null) {
			throw new UnsupportedOperationException("Class null.");
		}
		String jpql = "SELECT e FROM " + classe.getName() + " e";
		TypedQuery<E> query = em.createQuery(jpql, classe);
		query.setMaxResults(amount);
		query.setFirstResult(range);
		return query.getResultList();
	}
	
	public String getUser() {
		Usuario user = em.find(Usuario.class, 7L);
		if (user.getId() != null) {
		}
		return user.getNome() + " " + user.getEmail();
	}
	
	public String updateUser() {
		return this.getUser();
		
	}
	
	public void close() {
		em.close();
	}
	
}
